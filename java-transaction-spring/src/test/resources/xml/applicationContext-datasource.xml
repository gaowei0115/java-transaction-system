<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
 xmlns:tx="http://www.springframework.org/schema/tx"
 xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-4.3.xsd
    http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">
   
   <context:property-placeholder location="classpath:property/datasource.properties"/>
   
   <!-- dataSource -->
   <bean id="dataSource1" class="com.alibaba.druid.pool.DruidDataSource">
   		<!-- connection info -->
   		<property name="url" value="${datasource.url1}"/>
   		<property name="DriverClassName" value="${datasource.driverClassName1}"/>
   		<property name="username" value="${datasource.username1}"/>
   		<property name="password" value="${datasource.password1}"/>
   		<!-- connection pool info -->
   		<property name="initialSize" value="${druid.initialSize}"/>
   		<property name="maxActive" value="${druid.maxActive}"/>
   		<property name="minIdle" value="${druid.minIdle}"/>
   		<property name="maxWait" value="${druid.maxWait}"/>
   		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
   		<property name="minEvictableIdleTimeMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
   		<property name="validationQuery" value="${druid.validationQuery}"/>
   		<property name="testOnReturn" value="${druid.testOnReturn}"/>
   		<property name="testOnBorrow" value="${druid.testOnBorrow}"/>
   		<property name="testWhileIdle" value="${druid.testWhileIdle}"/>
   		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
   		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>
   		<property name="removeAbandoned" value="${druid.removeAbandoned}"/>
   		<property name="removeAbandonedTimeoutMillis" value="${druid.removeAbandonedTimeout}"/>
   		<property name="logAbandoned" value="${druid.logAbandoned}"/>
   		<property name="filters" value="${druid.filters}"/>
   </bean>
   
   <!-- dataSource -->
   <bean id="dataSource2" class="com.alibaba.druid.pool.DruidDataSource">
   		<!-- connection info -->
   		<property name="url" value="${datasource.url2}"/>
   		<property name="DriverClassName" value="${datasource.driverClassName2}"/>
   		<property name="username" value="${datasource.username2}"/>
   		<property name="password" value="${datasource.password2}"/>
   		<!-- connection pool info -->
   		<property name="initialSize" value="${druid.initialSize}"/>
   		<property name="maxActive" value="${druid.maxActive}"/>
   		<property name="minIdle" value="${druid.minIdle}"/>
   		<property name="maxWait" value="${druid.maxWait}"/>
   		<property name="timeBetweenEvictionRunsMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
   		<property name="minEvictableIdleTimeMillis" value="${druid.timeBetweenEvictionRunsMillis}"/>
   		<property name="validationQuery" value="${druid.validationQuery}"/>
   		<property name="testOnReturn" value="${druid.testOnReturn}"/>
   		<property name="testOnBorrow" value="${druid.testOnBorrow}"/>
   		<property name="testWhileIdle" value="${druid.testWhileIdle}"/>
   		<property name="poolPreparedStatements" value="${druid.poolPreparedStatements}"/>
   		<property name="maxPoolPreparedStatementPerConnectionSize" value="${druid.maxPoolPreparedStatementPerConnectionSize}"/>
   		<property name="removeAbandoned" value="${druid.removeAbandoned}"/>
   		<property name="removeAbandonedTimeoutMillis" value="${druid.removeAbandonedTimeout}"/>
   		<property name="logAbandoned" value="${druid.logAbandoned}"/>
   		<property name="filters" value="${druid.filters}"/>
   </bean>
   
   <!-- 动态数据源配置 -->
   <bean id="dynamicDataSource" class="com.mmc.transaction.system.spring.datasource.DynamicDataSource">
   		<property name="defaultTargetDataSource" ref="dataSource1"/>
   		<property name="targetDataSources">
   			<map key-type="com.mmc.transaction.system.spring.datasource.DataSourceType">
   				<entry key="DS_01" value-ref="dataSource1"/>
   				<entry key="DS_02" value-ref="dataSource2"/>
   				<!-- 依次配置多个数据源 -->
   			</map>
   		</property>
   </bean>
   
   <!-- mybatis配置 -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
   		<property name="dataSource" ref="dynamicDataSource"/>
   		<property name="configLocation" value="classpath:sqlmap/sqlmap-config.xml"/>
   </bean>
   
   <!-- mapper扫描器 -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<property name="basePackage" value="com.mmc.transaction.system.spring.mapper"/>
   		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>
   </bean>
   
   <!-- 声明式事务管理 -->
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
   		<property name="dataSource" ref="dynamicDataSource"/>
   </bean>
   
    <!-- 开启事务控制的注解支持 -->  
    <tx:annotation-driven transaction-manager="transactionManager"/>
    
</beans>